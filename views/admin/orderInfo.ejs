<%- include('../adminLayouts/header.ejs') %>
<%- include('../adminLayouts/sidebar.ejs') %>
<%- include('../adminLayouts/navbar.ejs') %>

<style>
.form-select.cancelled {
    color: red;
    background-color: white;
}
    
.swal2-popup {
    background-color: white;
    color: #007bff;
}

.your-custom-class .swal2-popup {
    height: 100px; 
}

.swal2-modal .swal2-title {
    font-size: 25px;
    line-height: 1;
    font-weight: 500;
    color: black;
    font-weight: initial;
    margin-bottom: 0;
}
</style>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="container-fluid">
            <h2 class="mt-4">Order Details</h2>
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            Order Information
                        </div>
                        <div class="card-body">
                            <p><span class="text-warning">Order ID:</span> <%= order.orderTrackId %></p>
                            <p><span class="text-warning">Order Date:</span> <%= order.createdAt.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).replace(/\//g, '-') %></p>
                            <p><span class="text-warning">Total Price: </span>₹ <%= (order.totalAmount + order.couponDiscount).toFixed(2) %></p>
                            <p><span class="text-warning">Discount Amount: </span>₹ <%= order.couponDiscount.toFixed(2) %></p>
                            <p><span class="text-warning">Discounted Price: </span>₹ <%= order.totalAmount.toFixed(2) %></p>
                            <p><span class="text-warning">Payment Method: </span><%= order.paymentMethod %></p>
                            <p><span class="text-warning">Payment Status: </span><%= order.paymentStatus %></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            Address
                        </div>
                        <div class="card-body">
                            <p><span class="text-warning">Full Name:</span> <%= order.address.fullName %></p>
                            <p><span class="text-warning">City:</span> <%= order.address.city %></p>
                            <p><span class="text-warning">District:</span> <%= order.address.district %></p>
                            <p><span class="text-warning">State:</span> <%= order.address.state %></p>
                            <p><span class="text-warning">Pincode:</span> <%= order.address.pincode %></p>
                            <p><span class="text-warning">Mobile:</span> <%= order.address.mobile %></p>
                            <p><span class="text-warning">Instructions: </span> <%= order.notes %></p>
                            
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            Products
                        </div>
                        <div class="card-body">
                            <% order.products.forEach(product => { %>
                                <div class="row mb-3">
                                    <div class="col-md-2">
                                        <img src="/static/admin/Assets/images/products/<%= product.productId.image[0] %>" alt="Product Image" style="width: 75px;">
                                    </div>
                                    <div class="col-md-4">
                                        <h5><%= product.productId.productname %></h5>
                                        <p class="mb-1">Quantity: <%= product.quantity %></p>
                                        <p class="mb-2">Price: ₹ <%= product.price %></p>
                                        <p>Subtotal: ₹ <span class="subtotal" data-refund-amount="<%= product.subtotal %>"><%= product.subtotal %></span></p>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p class="mb-0"><strong>Order Status:</strong></p>
                                                <select class="form-select productStatus <%= product.status === 'Cancelled' ? 'cancelled' : '' %>"
                                                    data-product-id="<%= product._id %>"
                                                    id="productStatus_<%= product._id %>"
                                                    onchange="updateProductStatus('<%= order._id %>', '<%= product._id %>', '<%= product.status %>')"
                                                    <%= product.status === 'Cancelled' ? 'disabled' : '' %>
                                                    <%= product.status === 'Delivered' ? 'disabled' : '' %>
                                                    <%= product.status === 'Return' ? 'disabled' : '' %>
                                                    >
                                                    <option value="Order Placed" <%= product.status === 'Order Placed' ? 'selected' : '' %>>Order Placed</option>
                                                    <option value="Shipped" <%= product.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                                    <option value="Out for Delivery" <%= product.status === 'Out for Delivery' ? 'selected' : '' %>>Out for Delivery</option>
                                                    <option value="Delivered" <%= product.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                                    <option value="Cancelled" <%= product.status === 'Cancelled' ? 'selected' : '' %>>Cancel</option>
                                                    <option value="Return" <%= product.status === 'Return' ? 'selected' : '' %> disabled>Return</option>
                                                </select>                                               
                                            </div>
                                            <% if (product.status === "Cancelled") { %>           
                                                <div class="alert alert-info text-center" role="alert">
                                                  Product Order Cancelled
                                                </div>
                                              <% } %>  
                                              <% if (product.status === "Delivered") { %>           
                                                <div class="alert alert-info text-center" role="alert">
                                                  Product successfully delivered!!!
                                                </div>
                                              <% } %>  
                                              <div class="col-md-6 return-status-section <%= product.status === 'Return' ? '' : 'd-none' %>" id="returnStatusSection">
                                                <p>
                                                    <strong>Return Status:</strong>
                                                    <select class="form-select returnStatus" data-product-id="<%= product._id %>" <%= product.returnStatus === "Returned" ? 'disabled' : '' %>>
                                                        <option value="Return Placed" <%= product.returnStatus === 'Return Placed' ? 'selected' : '' %>>Return Placed</option>
                                                        <option value="Out for Pickup" <%= product.returnStatus === 'Out for Pickup' ? 'selected' : '' %>>Out for Pickup</option>
                                                        <option value="Returned" <%= product.returnStatus === 'Returned' ? 'selected' : '' %>>Returned</option>
                                                    </select>
                                                </p>
                                            
                                                <% if (product.returnStatus !== "Returned") { %>
                                                    <button class="btn btn-md btn-warning refund-btn" style="color: black;" data-product-id="<%= product._id %>">Refund</button>
                                                <% } else if(product.returnStatus === "Returned") { %>
                                                    <button class="btn btn-md btn-warning" style="color: black;" data-product-id="<%= product._id %>" disabled>Refunded</button>
                                                <% } %>
                                            </div>
                                            
                                        </div>                                                                                                          
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script>
    document.addEventListener('DOMContentLoaded', function () {
        const orderId = '<%= order._id %>';

        const productStatusSelects = document.querySelectorAll('.productStatus');
        productStatusSelects.forEach((select) => {
            select.addEventListener('change', handleProductStatusChange);
        });

        async function handleProductStatusChange(event) {
            const productId = event.target.getAttribute('data-product-id');

            const response = await fetch('/admin/updateProductStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    orderId: orderId,
                    productId: productId,
                    productStatus: event.target.value,
                }),
            });

            if (!response.ok) {
                console.error('Failed to update product status on the server');
            } else {
                location.reload()
                console.log('Product status updated successfully');
            }
        }
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const orderId = '<%= order._id %>';

        const returnStatusSelects = document.querySelectorAll('.returnStatus');
        returnStatusSelects.forEach((select) => {
            select.addEventListener('change', handleReturnStatusChange);
            handleReturnStatusChange({ target: select });
        });

        async function handleReturnStatusChange(event) {
            const productId = event.target.getAttribute('data-product-id');
            const refundButton = document.querySelector(`.refund-btn[data-product-id="${productId}"]`);

            if (event.target.value === 'Returned') {
                refundButton.removeAttribute('disabled');
            } else {
                refundButton.setAttribute('disabled', true);
            }

            const response = await fetch('/admin/updateReturnStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    orderId: orderId,
                    productId: productId,
                    returnStatus: event.target.value,
                }),
            });

            if (!response.ok) {
                console.error('Failed to update return status on the server');
            }
        }

    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const orderId = '<%= order._id %>';
        const refundButtons = document.querySelectorAll('.refund-btn');

        refundButtons.forEach((button) => {
            button.addEventListener('click', handleRefund);
        });

        async function handleRefund(event) {
            const productId = event.target.getAttribute('data-product-id');

            // Show SweetAlert confirmation dialog
            const confirmation = await Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to process a refund for this product?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, refund it!'
            });

            if (!confirmation.isConfirmed) {
                return;
            }

            const refundButton = document.querySelector(`.refund-btn[data-product-id="${productId}"]`);
            
            try {
                const response = await fetch('/admin/refund', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        productId: productId,
                    }),
                });

                if (!response.ok) {
                    throw new Error('Failed to process refund on the server');
                }

                const responseData = await response.json();

                if (responseData.success) {
                    Swal.fire({
                        title: responseData.message,
                        icon: "success",
                        timer: 3000,
                        showConfirmButton: false,
                        customClass: {
                            popup: "animate__animated animate__fadeInDown",
                            content: "your-custom-class",
                        },
                    }).then(()=>{
                        location.reload()
                    })
                } else {
                    throw new Error(`Error processing refund: ${responseData.message}`);
                }
            } catch (error) {
                console.error(error.message);
            }
        }
    });
</script>



<%- include('../adminLayouts/footer.ejs') %>
