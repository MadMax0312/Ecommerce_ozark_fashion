<%- include('../userLayouts/header.ejs') %> <%- include('../userLayouts/navbar.ejs') %>

<div class="site-wrap">
    <div class="bg-light py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-12 mb-0">
                    <a href="/">Home</a> <span class="mx-2 mb-0">/</span> <strong class="text-black">Cart</strong>
                </div>
            </div>
        </div>
    </div>

    <div class="site-section">
        <div class="container">
            <div class="row mb-5">
                <form class="col-md-12" method="post">
                    <div class="site-blocks-table">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th class="product-thumbnail">Image</th>
                                    <th class="product-name">Product</th>
                                    <th class="product-prices">Actual Price</th>
                                    <th class="product-prices">Discount Price</th>
                                    <th class="product-quantity">Quantity</th>
                                    <th class="product-total">Total</th>
                                    <th class="product-remove">Remove</th>
                                </tr>
                            </thead>
                            <tbody>

                                <% if (count > 0) { %> 
                               
                               
                                <% data.forEach(cartItem => { %> <% cartItem.items.forEach(item => { %>
                                <tr>
                                    <td class="product-thumbnail">
                                        <img
                                            src="/static/admin/Assets/images/products/<%= item.product.image?.[0] %>"
                                            alt="ProductImage"
                                            style="width: 100px; height: 100px; border: none; border-radius: 0"
                                            class="image-fluid"
                                        />
                                    </td>
                                    <td class="product-name"><%= item.product.productname %></td>
                                    <td class="product-prices" data-product-prices="<%= item.product.price %>">
                                        ₹<%= item.product.price %>
                                    </td>
                                    <td class="product-price" data-product-price="<%= item.product.price %>">
                                        ₹<%= item.product.discountedPrice %>
                                    </td>
                                    <td style="text-align: center"> 
                                        <div class="input-group mb-3" style="max-width: 130px; margin: 0 auto">
                                            <div class="input-group-prepend">
                                                <button class="btn btn-outline-primary js-btn-minus" type="button">
                                                    &minus;
                                                </button>
                                            </div>
                                            <input type="number" class="form-control text-center quantity-input pl-4" 
                                            value="<%= item.quantity %>" data-product-id="<%= item.product._id %>" 
                                            aria-label="Quantity" aria-describedby="button-addon1" id="minus"
                                            min="1" readonly />

                                            <div class="input-group-append">
                                                <button
                                                    class="btn btn-outline-primary js-btn-plus"
                                                    data-products-id="<%= item.product._id %>"
                                                    type="button"
                                                >
                                                    &plus;
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="total-price"
                                            >₹ <%= (item.quantity * item.product.discountedPrice).toFixed(2) %></span
                                        >
                                    </td>
                                    <td>
                                        <a
                                            href="/remove-cart?cartId=<%= cartItem._id %>&productId=<%= item.product._id %>"
                                            class="buy-now btn btn-sm"
                                            style="background-color: white; color: red; height: 35px; border: none"
                                            onclick="confirmRemove(event)"
                                        >
                                            Remove
                                        </a>
                                    </td>
                                </tr>
                                <% }); %>
                                <% }); %>
                                <!-- <% if (data.length = []) { %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6">
                                        <p class="text-center">No products in your cart.</p>
                                    </td>
                                </tr>
                            <% } %> -->
                           <% } else { %>
                                <tr>
                                    <td colspan="6">
                                        <p class="text-center">No products available.</p>
                                    </td>
                                </tr>
                                <% } %>
                                
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="row mb-5">
                        <div class="col-md-6">
                            <a href="/shop"
                                ><button class="btn btn-outline-primary btn-sm btn-block">Continue Shopping</button></a
                            >
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <label class="text-black h4" for="coupon">Coupon</label>
                            <p>Enter your coupon code if you have one.</p>
                        </div>
                        <div class="col-md-8 mb-3 mb-md-0">
                            <input type="text" class="form-control py-3" id="coupon" placeholder="Coupon Code" />
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-primary btn-sm">Apply Coupon</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 pl-5">
                    <div class="row justify-content-end">
                        <div class="col-md-7">
                            <div class="row">
                                <div class="col-md-12 text-right border-bottom mb-5">
                                    <h3 class="text-black h4 text-uppercase">Cart Totals</h3>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <span class="text-black">Subtotal</span>
                                </div>
                                <div class="col-md-6 text-right">
                                    <strong class="text-black subtotal"> <%= subtotal.toFixed(2) %> Rs</strong>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                   
                                        <button type="button"
                                        class="btn btn-primary btn-lg py-3 btn-block buyNowBtn"
                                       >
                                            Proceed To Checkout
                                        </button>
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>

 document.body.addEventListener("click", async (event) => {
    console.log("clicked");
    if (event.target.matches(".buyNowBtn")) {
        try {
            const response = await fetch("/checkout", {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (response.ok) {
           
                window.location.href = "/checkout";
            } else {

                if (response.status === 401) {
                    Swal.fire({
                        icon: "warning",
                        title: "Warning!",
                        text: "Please log in to continue.",
                        showCancelButton: true,
                        confirmButtonText: "Log In",
                        cancelButtonText: "Cancel",
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = "/login";
                        }
                    });
                } else {
                    // Handle other error cases
                    const data = await response.json();
                    Swal.fire({
                        icon: "warning",
                        title: "Warning!",
                        text: data.message,
                    });
                }
            }
        } catch (error) {
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: "An error occurred.",
            });
            console.error("There was a problem with the fetch operation:", error);
        }
    }
});

</script>


<script>
document.addEventListener("DOMContentLoaded", function () {
    const quantityInputs = document.querySelectorAll(".quantity-input");
    const totalPriceElements = document.querySelectorAll(".total-price");
    const productPrices = Array.from(document.querySelectorAll(".product-price"))
            .map((price) => parseFloat(price.textContent))
            .filter((price) => !isNaN(price)); // Filter out NaN values
    const subtotalElement = document.querySelector(".subtotal");

    quantityInputs.forEach((input, index) => {
        const minusButton = input.parentElement.querySelector(".js-btn-minus");
        const plusButton = input.parentElement.querySelector(".js-btn-plus");
        const productID = input.getAttribute("data-product-id");

        minusButton.addEventListener("click", function () {
            updateQuantity(input, index, productID, -1);
            updateSubtotal();
           
        });

        plusButton.addEventListener("click", function () {
            updateQuantity(input, index, productID, 1);
            updateSubtotal();
           
        });
    });

    async function updateQuantity(input, index, productID, quantityChange) {
        const quantity = parseInt(input.value, 10);
        const newQuantity = quantity + quantityChange;

        try {
            const maxStockResponse = await fetch(`/get-max-stock/${productID}`);
            const maxStockData = await maxStockResponse.json();

            if (newQuantity < 1) {
                showError("Quantity cannot be less than 1.");
                input.value = 1;
               
            } else if (newQuantity > 9) {
                showError("Cannot order more than 9 items at a time!");
                input.value = 9;
               
            } else if (newQuantity > maxStockData.maxStock) {
                showError(`Cannot order more than ${maxStockData.maxStock} items for this product!`);
                input.value = maxStockData.maxStock;
              
            } else {
                input.value = newQuantity;
                await handleQuantityUpdate(productID, newQuantity, index);
                location.reload();
            }
        } catch (error) {
            console.error("Error updating cart quantity:", error);
        }
    }

    async function handleQuantityUpdate(productID, quantity, index) {
    try {
        const response = await fetch("/update-cart", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ productID: productID, quantity: quantity }),
        });

        const data = await response.json();

        if (data && data.items && data.items.length > 0) {
            const updatedItem = data.items[0];
            const productPrice = parseFloat(updatedItem.product.price);
            const quantity = parseInt(updatedItem.quantity, 10);

            if (!isNaN(productPrice) && !isNaN(quantity)) {
                const totalPrice = quantity * productPrice;
                totalPriceElements[index].textContent = `₹ ${totalPrice.toFixed(2)}`;
            } else {
                console.error("Invalid product price or quantity:", updatedItem);
            }
        } else {
            console.error("Invalid response data:", data);
        }

        updateSubtotal();
    } catch (error) {
        console.error("Error updating cart quantity:", error);
    }
}


    function updateSubtotal() {
        const totalPrices = Array.from(totalPriceElements)
            .map((total) => parseFloat(total.textContent.replace("₹ ", "")))
            .reduce((acc, val) => acc + val, 0);
        subtotalElement.textContent = `₹ ${totalPrices.toFixed(2)}`;
    }

    function showError(message) {
        Swal.fire({
            title: "Oops",
            text: message,
            icon: "error",
            confirmButtonText: "OK",
        });
    }
});


</script>

<script>
    function confirmRemove(event) {
        event.preventDefault();

        Swal.fire({
            title: "Are you sure?",
            text: "You are about to remove this product. Continue?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "OK",
            cancelButtonText: "Cancel",
        }).then((result) => {
            if (result.isConfirmed) {
                // If user clicks "OK", proceed with the removal
                window.location.href = event.target.href;
            }
        });
    }
</script>

<%- include('../userLayouts/footer.ejs') %>
