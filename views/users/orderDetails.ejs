<%- include('../userLayouts/header.ejs') %> <%- include('../userLayouts/navbar.ejs') %>

<style>

  .hot{
    color: black;
    font-weight: 400;
  }
  .disabled-link{
    color: gray;
  }

  .rating {
  display: flex;
  justify-content: center;
  flex-direction: row-reverse;
  gap: 0.3rem;
  --stroke: #666;
  --fill: #ffc73a;
}

.rating input {
  appearance: unset;
}

.rating label {
  cursor: pointer;
}

.rating svg {
  width: 2rem;
  height: 2rem;
  overflow: visible;
  fill: transparent;
  stroke: var(--stroke);
  stroke-linejoin: bevel;
  stroke-dasharray: 12;
  animation: idle 4s linear infinite;
  transition: stroke 0.2s, fill 0.5s;
}

@keyframes idle {
  from {
    stroke-dashoffset: 24;
  }
}

.rating label:hover svg {
  stroke: var(--fill);
}

.rating input:checked ~ label svg {
  transition: 0s;
  animation: idle 4s linear infinite, yippee 0.75s backwards;
  fill: var(--fill);
  stroke: var(--fill);
  stroke-opacity: 0;
  stroke-dasharray: 0;
  stroke-linejoin: miter;
  stroke-width: 8px;
}

@keyframes yippee {
  0% {
    transform: scale(1);
    fill: var(--fill);
    fill-opacity: 0;
    stroke-opacity: 1;
    stroke: var(--stroke);
    stroke-dasharray: 10;
    stroke-width: 1px;
    stroke-linejoin: bevel;
  }

  30% {
    transform: scale(0);
    fill: var(--fill);
    fill-opacity: 0;
    stroke-opacity: 1;
    stroke: var(--stroke);
    stroke-dasharray: 10;
    stroke-width: 1px;
    stroke-linejoin: bevel;
  }

  30.1% {
    stroke: var(--fill);
    stroke-dasharray: 0;
    stroke-linejoin: miter;
    stroke-width: 8px;
  }

  60% {
    transform: scale(1.2);
    fill: var(--fill);
  }
}

</style>

<div class="site-wrap">
  <div class="bg-light py-3">
      <div class="container">
          <div class="row">
              <div class="col-md-12 mb-0">
                  <a href="/">Home</a> <span class="mx-2 mb-0">/</span>
                  <strong class="text-black">Order Details</strong>
              </div>
          </div>
      </div>
  </div>

<section class="gradient-custom-2">
  <div class="container py-2 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-md-10 col-lg-8 col-xl-7">
        <div class="card card-stepper" style="border-radius: 16px;">
          <div class="card-header p-4">
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <p class="mb-2"> Order ID: &nbsp; <span class="fw-bold text-body"><%= order.orderTrackId %></span></p>
                <p class="mb-0"> Placed On:  &nbsp;<span class="fw-bold text-body"> <%= order.createdAt.toLocaleDateString('en-US', { year: 'numeric', month:
                  'short', day: '2-digit' }).replace(/\//g, '-') %></span> </p>
              </div>
            </div>
          </div>
          <div class="card-body p-4">
       
                <div class="d-flex flex-row mb-4 pb-2">
                  <div class="flex-fill">
                    <h3 class="hot"><%= product.productId.productname %></h3>
                    <p class="hot">Qty: <%= product.quantity %></p>
                    <h5 class="hot" >Total: <%= product.subtotal %></h5>
                    <h6 class="hot"><%= order.paymentMethod %></h6>
                    <h5 class="hot">Payment Status: <span class="hot"><%= product.paymentStatus %> </span></h5>
                  </div>
                  <div>
                    <img class="align-self-center"
                      src="/static/admin/Assets/images/products/<%= product.productId.image[0] %>" width="150" height="200">
                  </div>
                </div>
                <% if (product.status !== "Cancelled" && product.status !== "Return") { %>
                  <div class="progress-track" data-order-id="<%= order._id %>" data-product-id="<%= product._id %>" data-product-status="<%= product.status === 'Order Placed' ? 1 : (product.status === 'Shipped' ? 2 : (product.status === 'Out for Delivery' ? 3 : (product.status === 'Delivered' ? 4 : 0))) %>">
                    <ul class="progress-bars">
                      <li class="step <%= product.status === 'Order Placed' ? 'active' : '' %>" id="step1">Order Placed</li>
                      <li class="step <%= product.status === 'Shipped' ? 'active' : '' %>" id="step2">Shipped</li>
                      <li class="step <%= product.status === 'Out for Delivery' ? 'active' : '' %>" id="step3">Out for Delivery</li>
                      <li class="step <%= product.status === 'Delivered' ? 'active' : '' %>" id="step4">Delivered</li>
                    </ul>              
                  </div>
      

                <% } else if (product.status === "Cancelled") { %>
                  <div class="cancelled-progress-track" data-order-id="<%= order._id %>" data-product-id="<%= product._id %>" data-product-status="<%= product.status === 'Cancelled' ? 2 : 0 %>">
                    <ul class="cancelled-progress-bar">
                      <li class="step <%= product.status === 'Order Placed' ? 'active' : '' %>">Order Placed</li>
                      <li class="step <%= product.status === 'Cancelled' ? 'active text-black' : '' %>">Order Cancelled</li>
                    </ul>
                    <div class="alert alert-danger text-center" role="alert">
                      Your Order has been Cancelled. Refund is processed.
                    </div>
                  </div>
                <% } else if (product.status === "Return") { %>
                  <div class="return-progress-track" data-order-id="<%= order._id %>" data-product-id="<%= product._id %>" data-product-status="<%= product.status === 'Return' ? 5 : 0 %>">
                    <ul class="return-progress-bar">
                      <li class="step return-placed <%= product.returnStatus === 'Return Placed' ? 'active' : '' %>">Return Placed</li>
                      <li class="step out-for-pickup <%= product.returnStatus === 'Out for Pickup' ? 'active' : '' %>">Out for Pickup</li>
                      <li class="step returned <%= product.returnStatus === 'Returned' ? 'active text-black' : '' %>">Returned</li>
                    </ul>
                  </div>

 

                <% } %>

                <% if (product.returnStatus !== "Returned") { %>
                  <div class="alert alert-warning text-center" role="alert">
                    Return request Accepted. Refund in progress.
                  </div>

                  <% } else if(product.returnStatus === "Returned") {%>
                  <div class="alert alert-success text-center" role="alert">
                    Amount refunded Successfully to your Wallet
                  </div>

                  <% } %>

                <!-- ----------------------------------------------------------------------- -->

                <% if (product.status === "Delivered") { %>
                  <div class="review-section" id="reviewSection">
                    <div class="alert alert-success text-center" role="alert">
                      Your order has been delivered. Please rate and review the product.
                    </div>
                
                    <!-- Rating and review form -->
                  <form id="ratingForm">
                    <!-- Rating input -->
                    <div class="form-group">
                      <h5 class="text-center p-0">Rating</h5>
                      <div class="rating">
                        <input type="radio" id="star-1" name="star" value="5" <%= existingReview && existingReview.rating === 5 ? 'checked' : '' %>>
                        <label for="star-1">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path pathLength="360" d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"></path></svg>
                        </label>
                        <input type="radio" id="star-2" name="star" value="4" <%= existingReview && existingReview.rating === 4 ? 'checked' : '' %>>
                        <label for="star-2">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path pathLength="360" d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"></path></svg>
                        </label>
                        <input type="radio" id="star-3" name="star" value="3" <%= existingReview && existingReview.rating === 3 ? 'checked' : '' %>>
                        <label for="star-3">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path pathLength="360" d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"></path></svg>
                        </label>
                        <input type="radio" id="star-4" name="star" value="2" <%= existingReview && existingReview.rating === 2 ? 'checked' : '' %>>
                        <label for="star-4">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path pathLength="360" d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"></path></svg>
                        </label>
                        <input type="radio" id="star-5" name="star" value="1" <%= existingReview && existingReview.rating === 1 ? 'checked' : '' %>>
                        <label for="star-5">
                          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path pathLength="360" d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"></path></svg>
                        </label>
                      </div>
                    </div>

                      <div class="form-group">
                        <label for="comment"><h5 class="m-0">Feedback</h5></label>
                        <textarea class="form-control" name="comment" id="comment" rows="2"
                          aria-label="Product Review"><%= existingReview && existingReview.comment ? existingReview.comment : '' %></textarea>
                      </div>
                      <!-- Hidden input to pass product ID to the server -->
                      <input type="hidden" name="productId" value="<%= product.productId._id %>">
                
                      <!-- Submit button -->
                      <div class="text-center">
                        <button type="button" class="btn btn-md btn-warning" id="submitButton">Submit</button>
                      </div>
                    </form>
                  </div>

                  <div id="reviewSections">

                  </div>

                  <% } %>
                
               
                </div>


                <!-- ------------------------------------------------- -->
                
                <div class="card-footer p-4">
                  <div class="d-flex justify-content-center">
                    <div class="border-start h-100"></div>
                    <div class="border-start h-100"></div>
                    <% if (product.status !== "Cancelled" && product.status !== "Out for Delivery" && product.status !== "Delivered" && product.status !== "Return") { %>
                      <button class="btn btn-danger fw-normal mb-0 mr-2" id="cancelButton" style="font-size: 14px;">Cancel</button>
                    <% } else { %>
                      <button class="btn btn-secondary fw-normal mb-0 disabled-link text-muted mr-2" style="font-size: 14px;" disabled>Cancel</button>
                    <% } %>
                  
                    <% if (product.status === "Delivered") { %>
                      <button class="btn btn-primary fw-normal mb-0 ml-2" id="returnLink" style="font-size: 14px;">Return</button>
                    <% } else { %>
                      <button class="btn btn-secondary fw-normal mb-0 disabled-link text-muted ml-2" style="font-size: 14px;" disabled>Return</button>
                    <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const submitButton = document.getElementById("submitButton");
    const reviewSections = document.getElementById("reviewSections");

    submitButton.addEventListener("click", async function () {
      try {
        const star = document.querySelector('input[name="star"]:checked').value;
        const comment = document.getElementById('comment').value;
        const productId = document.querySelector('input[name="productId"]').value;

        const response = await fetch("/submit-rating-review", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ star, comment, productId }),
        });

        if (!response.ok) {
          throw new Error(`Network response was not ok. Status: ${response.status}`);
        }else{
          reviewSections.innerHTML = '<div class="alert alert-success text-center" role="alert">Thank you for your rating and feedback!</div>';
        }

      } catch (error) {
        console.error('There was a problem with the fetch operation:', error);
      }
    });
  });
</script>



<script>
  document.addEventListener('DOMContentLoaded', function () {
    let initialProductStatus;

    function updateProductStatus(orderId, productId, productStatus, link) {
      fetch('/updateProductStatus', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          orderId: orderId,
          productId: productId,
          productStatus: productStatus,
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            const updatedProduct = data.product;
            updateProgressBar(updatedProduct.status);
            location.reload();
            if (updatedProduct.status === 'Cancelled') {
              // Show SweetAlert for cancelled order
              Swal.fire({
                icon: 'error',
                title: 'Order Cancelled!',
                text: 'Your order has been cancelled.',
              }).then(() => {
              location.reload();
            });
              // Update the UI without reloading the page
              link.classList.add('disabled-link');
              link.removeAttribute('href');
            }
          } else {
            console.error('Error updating product status:', data.error);
          }
        })
        .catch((error) => {
          console.error('Error updating product status:', error);
        });
    }

    function updateProgressBar(productStatus) {
      const progressBarSteps = document.querySelectorAll('.progress-track .step');
      progressBarSteps.forEach((step) => {
        step.classList.remove('active');
      });

      for (let i = 0; i < productStatus; i++) {
        progressBarSteps[i].classList.add('active');
      }
    }

    function updateProductStatusWithConfirmation(orderId, productId, productStatus, link) {
      Swal.fire({
        title: 'Are you sure?',
        text: 'You won\'t be able to revert this!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, ' + productStatus.toLowerCase() + ' it!'
      }).then((result) => {
        if (result.isConfirmed) {
          updateProductStatus(orderId, productId, productStatus, link);
        }
      })
    }

    const cancelLink = document.getElementById('cancelLink');
    if (cancelLink) {
      cancelLink.addEventListener('click', function (event) {
        event.preventDefault();

        const progressBar = document.querySelector('.progress-track');
        const orderId = progressBar ? progressBar.dataset.orderId : null;
        const productId = progressBar ? progressBar.dataset.productId : null;
        const productStatus = progressBar ? progressBar.dataset.productStatus : null;

        if (productStatus !== 'Delivered' && productStatus !== 'Cancelled' && productStatus !== 'Out for Delivery') {
          updateProductStatusWithConfirmation(orderId, productId, 'Cancelled', cancelLink);
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Invalid Action!',
            text: 'You cannot cancel an order with the current status.',
          });
        }
      });
    }

    const returnLink = document.getElementById('returnLink');
    if (returnLink) {
      returnLink.addEventListener('click', function (event) {
        event.preventDefault();

        const progressBar = document.querySelector('.progress-track');
        const orderId = progressBar ? progressBar.dataset.orderId : null;
        const productId = progressBar ? progressBar.dataset.productId : null;
        const productStatus = progressBar ? progressBar.dataset.productStatus : null;

        if (productStatus === '4') {
          updateProductStatusWithConfirmation(orderId, productId, 'Return', returnLink);
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Invalid Action!',
            text: 'You cannot return an order with the current status.',
          });
        }
      });
    }
  });
</script>

<%- include('../userLayouts/footer.ejs') %>